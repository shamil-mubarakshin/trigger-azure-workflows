name: Trigger Build workflow

on:
  workflow_call:
    inputs:
      image_type:
        required: true
        type: string

defaults:
  run:
    shell: pwsh

jobs:
  trigger-workflow:
    runs-on: ubuntu-latest
    steps:
      # - name: Create Check run
      #   id: create-pr-check
      #   env:
      #     CI_PR_TOKEN: ${{ secrets.CI_PR_TOKEN }}
      #     PR_TITLE: ${{ github.event.pull_request.title }}
      #   run: |
      #     $headers = @{
      #       Authorization="Bearer $env:CI_PR_TOKEN"
      #     }

      #     # Public repository with PRs
      #     $apiRepoUrl = "https://api.github.com/repos/${{ github.repository }}"

      #     $checkName = "${{ inputs.image_type }}.unstable.$(${{ github.run_id }} % [System.UInt32]::MaxValue)"
      #     $EventType = "manage-pr-check"
      #     $body = @{
      #       event_type = $EventType;
      #       client_payload = @{
      #         action_type = "Create"
      #         pr_title = "$env:PR_TITLE"
      #         head_sha = "${{ github.event.pull_request.head.sha }}"
      #         check_name = $checkName
      #         output_title = "${{ inputs.image_type }} Image CI"
      #         output_summary = "Image Build Started"
      #         output_text = "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      #       }
      #     }

      #     $BodyString = $body | ConvertTo-Json

      #     try {
      #       Invoke-WebRequest -Uri "$apiRepoUrl/dispatches" -Method Post -Headers $headers -Body $BodyString | Out-Null
      #     } catch {
      #       throw "$($_.exception[0].message)"
      #     }

      - name: Trigger Build workflow
        env:
          CI_PR_TOKEN: ${{ secrets.CI_PR_TOKEN }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          CI_REPO: ${{ secrets.CI_REPO }}
        run: |
          $headers = @{
            Authorization="Bearer $env:CI_PR_TOKEN"
          }

          # Private repository for builds
          $apiRepoUrl = "https://api.github.com/repos/$env:CI_REPO"

          $EventType = "trigger-${{ inputs.image_type }}-build"
          $body = @{
            event_type = $EventType;
            client_payload = @{
              pr_title = "$env:PR_TITLE"
              custom_repo = "${{ github.event.pull_request.head.repo.full_name }}"
              custom_repo_commit_hash = "${{ github.event.pull_request.head.sha }}"
            }
          }

          $BodyString = $body | ConvertTo-Json

          try {
            Invoke-WebRequest -Uri "$apiRepoUrl/dispatches" -Method Post -Headers $headers -Body $BodyString | Out-Null
          } catch {
            throw "$($_.exception[0].message)"
          }
